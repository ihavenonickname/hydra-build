import{r as n,w as d,d as p,o as u,e as c,f,c as v,g as V,b as _,v as y,a as k,h as w}from"./index-fb5e4c4d.js";import{_ as N}from"./basic-boolean-bd11e75e.js";const h={key:0},B={__name:"AttemptDelay",props:{modelValue:{type:Object,required:!0}},emits:["update:modelValue"],setup(x,{emit:m}){const l=m,e=n("No"),t=n("");d(e,()=>s()),d(t,()=>s()),p(()=>s());function s(){if(e.value==="Yes"){const a=parseInt(t.value);isNaN(a)||a<1?l("update:modelValue",{commandPart:null,error:"Inform a valid number of seconds for attempt delay"}):l("update:modelValue",{commandPart:`-c ${a}`,error:null})}else l("update:modelValue",{commandPart:"",error:null})}return(a,o)=>(u(),c(N,{modelValue:e.value,"onUpdate:modelValue":o[1]||(o[1]=r=>e.value=r),title:"Attempt delay",options:["Yes","No"],help:"The wait time in seconds per login attempt over all threads. This usually only makes sense if a low task number is used."},{default:f(r=>[r.picked==="Yes"?(u(),v("label",h,[V(" Seconds "),_(k("input",{type:"text","onUpdate:modelValue":o[0]||(o[0]=i=>t.value=i)},null,512),[[y,t.value]])])):w("",!0)]),_:1},8,["modelValue"]))}};export{B as default};
